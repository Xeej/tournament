.row
  .col
    %h1.page__title= t('players.title')

-# search form
.row{style: 'margin-top: -15px;'}
  .col
    .search-form.form-group
      = form_tag results_path, method: 'get', class: 'form-inline' do
        = search_field_tag :search, params[:search], class: 'form-control', placeholder: t('players.search')
        = button_tag type: 'submit', class: 'btn btn-ghost', name: nil do
          %span.material-icons= 'search'
-if current_user.present? && current_user.super_admin?
  .row
    = link_to new_player_path, action: :create, class: 'btn btn-sstm btn-square', style: 'margin-right: auto;' do
      %span.material-icons.admin-actions__link__icon= 'add'

-# Чтобы без подзапросов
.row{style: 'margin-bottom: +15px;'}
  .col
    = link_to 'Мужской рязряд', results_path(search: params[:search], filter: 'gender', filter_data: 'male'), class: 'btn btn-ghost', style: "background: #{params[:filter_data] == 'male' ? '#E5E9EB' : 'null'}"
  .col
    = link_to 'Женский рязряд', results_path(search: params[:search], filter: 'gender', filter_data: 'female'), class: 'btn btn-ghost', style: "background: #{params[:filter_data] == 'female' ? '#E5E9EB' : 'null'}"
  .col
    = link_to 'Выстовачные матчи', results_path(search: params[:search]), class: 'btn btn-ghost', style: "background: #{params[:filter_data].nil? ? '#E5E9EB' : 'null'}"

.tab-content
  .tab-pane.fade.show.active{role: 'tabpanel', 'aria-labelledby'=>'stats-tab'}
    %table.table.table-hover.table-borderless
      %thead.table-header
        %tr
          %th.text-center= link_to t('players.position'), results_path(search: params[:search], filter: params[:filter], filter_data: params[:filter_data], sort: 'position', order: 'asc')
          %th= link_to t('players.surname'), results_path(search: params[:search], filter: params[:filter], filter_data: params[:filter_data], sort: 'surname', order: 'asc')
          %th.text-center= link_to t('players.name'), results_path(search: params[:search], filter: params[:filter], filter_data: params[:filter_data], sort: 'name', order: 'asc')
          %th.text-center.d-none.d-sm-table-cell.d-md-table-cell.d-lg-none.d-xl-table-cell= link_to t('players.all_games'), results_path(search: params[:search], filter: params[:filter], filter_data: params[:filter_data], sort: 'wins', order: 'asc')
          %th.text-center= link_to t('players.wins'), results_path(search: params[:search], filter: params[:filter], filter_data: params[:filter_data], sort: 'wins', order: 'asc')

      %tbody.table-content.with-show.player-list-body
        - if @players.any?
          - last_player_points = nil
          - @players.each_with_index do |player, i|
            %tr{'data-id': player.id, 'data-component'=>'player'}
              -# Сортируем по индексу всех игроков, а выводим в зависимости от выбора фильтра это gender, костыль(
              %td.text-center= player.position(params[:filter_data])
              %td
                - if player.photo.present?
                  %img{src:"data:image/png;base64,#{player.photo}",class: 'player__characters__image_micro'}
                =player.surname
              %td.text-center= player.name
              %td.text-center.d-none.d-sm-table-cell.d-md-table-cell.d-lg-none.d-xl-table-cell= player.wins.to_i + player.losses.to_i
              %td.text-center= player.wins 
              - if current_user.present? and current_user.super_admin?
                %td.admin-list-actions
                  .admin-list-actions__link
                    = link_to edit_player_path(player), class:'btn btn-ghost btn-square' do
                      %span.material-icons.admin-actions__link__icon= 'edit'
                  .admin-list-actions__link
                    = link_to player, method: :delete, data: { confirm: t('players.delete') }, class: 'btn btn-sstm btn-square' do
                      %span.material-icons.admin-actions__link__icon= 'delete'

    .player-list-footer
      = render 'paginator', players: @players, anchor: 'data'

  - if !@players.any?
    %p{style: 'text-align: center;'}
    = t('players.no_players_found')
