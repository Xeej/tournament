- if matches.any? && matches.try(:total_pages).present?
  %nav
    %ul.pagination
      %li= hidden_field_tag 'total_pages', matches.total_pages
      %li.left-arrow
        - if matches.current_page.present? && matches.current_page > 1
          = link_to matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: matches.current_page-1), aria: {label: "Previous"} do
            %span{"aria-hidden"=> "true"}
              &laquo;
        - else
          %a
            %span{"aria-hidden"=> "true"}
              &laquo;

      - truncate_count = 5
      - if matches.total_pages > truncate_count * 2
        -# truncate
        - if matches.current_page < truncate_count
          - (1..truncate_count + 1).each do |page|
            %li{class: "#{"active" if page == matches.current_page}"}= link_to page.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: page), value: page
          %li= link_to '...', matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: matches.current_page), value: matches.current_page
          %li{class: "#{"active" if matches.total_pages == matches.current_page}"}= link_to matches.total_pages.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page:  matches.total_pages), value:  matches.total_pages
        - elsif matches.current_page >  matches.total_pages - truncate_count
          %li{class: "#{"active" if 1 == matches.current_page}"}= link_to 1.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: 1), value: 1
          %li= link_to '...', matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: matches.current_page), value: matches.current_page
          - (matches.total_pages-truncate_count..matches.total_pages).each do |page|
            %li{class: "#{"active" if page == matches.current_page}"}= link_to page.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: page), value: page
        - else
          %li{class: "#{"active" if 1 == matches.current_page}"}= link_to 1.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: 1), value: 1
          %li= link_to '...', matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: matches.current_page), value: matches.current_page
          - pol_truncate_count = truncate_count / 2
          - (matches.current_page-pol_truncate_count..matches.current_page+pol_truncate_count).each do |page|
            %li{class: "#{"active" if page == matches.current_page}"}= link_to page.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: page), value: page
          %li= link_to '...', matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: matches.current_page), value: matches.current_page
          %li{class: "#{"active" if matches.total_pages == matches.current_page}"}= link_to matches.total_pages.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page:  matches.total_pages), value:  matches.total_pages
      - else
        - (1..matches.total_pages).each do |page|
          %li{class: "#{"active" if page == matches.current_page}"}= link_to page.to_s, matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: page), value: page
      %li.right-arrow
        - if matches.try(:current_page).present? && matches.current_page < matches.total_pages
          = link_to matches_path(search: params[:search], order: params[:order], sort: params[:sort], page: matches.current_page+1), aria: {label: "Next"} do
            %span{"aria-hidden"=> "true"}
              &raquo;
        - else
          %a
            %span{"aria-hidden"=> "true"}
              &raquo;
